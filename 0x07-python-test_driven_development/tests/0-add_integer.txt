# 0-add_integer.txt
===============================
 How to Use 0-add_integer.py
===============================

This module adds 2 numbers, integers or floats
``add_integer()``.

Numbers
=======

``add_integer()`` returns the sum of its arguments.

::

	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(1, 2)
	3

	>>> add_integer(1.0, 4)
	5

	>>> add_integer(1, 4.3)
	5

	>>> add_integer(-3 , 5)
	2

	>>> add_integer(5.0, 5.0)
	10

	>>> add_integer(-1.0, -3.0)
	-4

	>>> add_integer(1)
	99

	>>> add_integer(float('inf'))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

	>>> add_integer(2, float('inf'))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

	>>> add_integer(2, float('nan'))
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer

Non Numbers
===========
``add_integer()`` only accepts int or float as its arguments.
Otherwise a TypeError is raised

::

	>>> add_integer("a", 3)
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> add_integer(1, "b")
	Traceback (most recent call last):
	TypeError: b must be an integer

	>>> add_integer(1, None)
	Traceback (most recent call last):
	TypeError: b must be an integer

	>>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer
